/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 */

// Definitions by: Eloy Durán <https://github.com/alloy>
//                 HuHuanming <https://github.com/huhuanming>
//                 Kyle Roach <https://github.com/iRoachie>
//                 Tim Wang <https://github.com/timwangdev>
//                 Kamal Mahyuddin <https://github.com/kamal>
//                 Alex Dunne <https://github.com/alexdunne>
//                 Manuel Alabor <https://github.com/swissmanu>
//                 Michele Bombardi <https://github.com/bm-software>
//                 Martin van Dam <https://github.com/mvdam>
//                 Kacper Wiszczuk <https://github.com/esemesek>
//                 Ryan Nickel <https://github.com/mrnickel>
//                 Souvik Ghosh <https://github.com/souvik-ghosh>
//                 Cheng Gibson <https://github.com/nossbigg>
//                 Saransh Kataria <https://github.com/saranshkataria>
//                 Wojciech Tyczynski <https://github.com/tykus160>
//                 Jake Bloom <https://github.com/jakebloom>
//                 Ceyhun Ozugur <https://github.com/ceyhun>
//                 Mike Martin <https://github.com/mcmar>
//                 Theo Henry de Villeneuve <https://github.com/theohdv>
//                 Romain Faust <https://github.com/romain-faust>
//                 Be Birchall <https://github.com/bebebebebe>
//                 Jesse Katsumata <https://github.com/Naturalclar>
//                 Xianming Zhong <https://github.com/chinesedfan>
//                 Valentyn Tolochko <https://github.com/vtolochk>
//                 Sergey Sychev <https://github.com/SychevSP>
//                 Kelvin Chu <https://github.com/RageBill>
//                 Daiki Ihara <https://github.com/sasurau4>
//                 Abe Dolinger <https://github.com/256hz>
//                 Dominique Richard <https://github.com/doumart>
//                 Mohamed Shaban <https://github.com/drmas>
//                 Jérémy Barbet <https://github.com/jeremybarbet>
//                 David Sheldrick <https://github.com/ds300>
//                 Natsathorn Yuthakovit <https://github.com/natsathorn>
//                 ConnectDotz <https://github.com/connectdotz>
//                 Alexey Molchan <https://github.com/alexeymolchan>
//                 Alex Brazier <https://github.com/alexbrazier>
//                 Arafat Zahan <https://github.com/kuasha420>
//                 Pedro Hernández <https://github.com/phvillegas>
//                 Sebastian Silbermann <https://github.com/eps1lon>
//                 Zihan Chen <https://github.com/ZihanChen-MSFT>
//                 Lorenzo Sciandra <https://github.com/kelset>
//                 Mateusz Wit <https://github.com/MateWW>
//                 Saad Najmi <https://github.com/saadnajmi>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 3.0

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// USING: these definitions are meant to be used with the TSC compiler target set to at least ES2015.
//
// USAGE EXAMPLES: check the RNTSExplorer project at https://github.com/bgrieder/RNTSExplorer
//
// CONTRIBUTING: please open pull requests
//
// CREDITS: This work is based on an original work made by Bernd Paradies: https://github.com/bparadie
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// <reference path="modules/BatchedBridge.d.ts" />
/// <reference path="modules/Codegen.d.ts" />
/// <reference path="modules/Devtools.d.ts" />
/// <reference path="modules/globals.d.ts" />
/// <reference path="modules/LaunchScreen.d.ts" />

export * from 'react-native/Libraries/ActionSheetIOS/ActionSheetIOSonSheetIOS';
exporreact-native/Libraries/Alert/Alertibraries/Alert/Alereact-native/Libraries/Animated/Animatedve/Libraries/Animareact-native/Libraries/Animated/Easing 'react-native/Libreact-native/Libraries/Animated/useAnimatedValue 'react-native/Libreact-native/Libraries/AppState/AppStateue';
export * fromreact-native/Libraries/BatchedBridge/NativeModuleste';
export * fromreact-native/Libraries/Components/AccessibilityInfo/AccessibilityInfort * from 'react-nreact-native/Libraries/Components/ActivityIndicator/ActivityIndicatornfo';
export * froreact-native/Libraries/Components/Clipboard/ClipboardtyIndicator/Activireact-native/Libraries/Components/DatePicker/DatePickerIOSies/Components/Clireact-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroidComponents/DatePicreact-native/Libraries/Components/Keyboard/Keyboardnative/Libraries/Creact-native/Libraries/Components/Keyboard/KeyboardAvoidingView* from 'react-natireact-native/Libraries/Components/Pressable/Pressable
export * from 'rereact-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';
export * from 'react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS
export * from 'rereact-native/Libraries/Components/RefreshControl/RefreshContrologressBarAndroid';react-native/Libraries/Components/SafeAreaView/SafeAreaView/ProgressViewIOS/Preact-native/Libraries/Components/ScrollView/ScrollViewLibraries/Componenreact-native/Libraries/Components/Slider/Sliderport * from 'reactreact-native/Libraries/Components/StatusBar/StatusBarafeAreaView';
exporeact-native/Libraries/Components/Switch/Switchponents/ScrollViewreact-native/Libraries/Components/TextInput/InputAccessoryViewComponents/Slider/react-native/Libraries/Components/TextInput/TextInputies/Components/Stareact-native/Libraries/Components/ToastAndroid/ToastAndroidbraries/Componentsreact-native/Libraries/Components/Touchable/Touchablee/Libraries/Componreact-native/Libraries/Components/Touchable/TouchableHighlighteact-native/Librarreact-native/Libraries/Components/Touchable/TouchableNativeFeedback-native/Libraries/react-native/Libraries/Components/Touchable/TouchableOpacityom 'react-native/Lreact-native/Libraries/Components/Touchable/TouchableWithoutFeedbackeact-native/Librarreact-native/Libraries/Components/View/VieweHighlight';
exporreact-native/Libraries/Components/View/ViewAccessibilityuchable/TouchableNreact-native/Libraries/Components/View/ViewPropTypese/Libraries/Componreact-native/Libraries/Components/Buttony';
export * from react-native/Libraries/EventEmitter/NativeEventEmitter/TouchableWithoutFreact-native/Libraries/EventEmitter/RCTDeviceEventEmitter/Components/View/Vreact-native/Libraries/EventEmitter/RCTNativeAppEventEmitterents/View/ViewAccereact-native/Libraries/Image/Imagem 'react-native/Lireact-native/Libraries/Image/ImageResizeModepes';
export * froreact-native/Libraries/Image/ImageSourceonents/Button';
exreact-native/Libraries/Interaction/InteractionManageritter/NativeEventEreact-native/Libraries/Interaction/PanResponderLibraries/EventEmireact-native/Libraries/LayoutAnimation/LayoutAnimationreact-native/Librareact-native/Libraries/Linking/LinkingppEventEmitter';
ereact-native/Libraries/Lists/FlatListLibraries/Image/Imreact-native/Libraries/Lists/SectionListive/Libraries/Imagreact-native/Libraries/Lists/VirtualizedList'react-native/Librreact-native/Libraries/LogBox/LogBoxexport * from 'reareact-native/Libraries/Modal/Modalraction/InteractionManager';
ereact-native/Libraries/Performance/Systraceies/Interaction/Pareact-native/Libraries/PermissionsAndroid/PermissionsAndroid/LayoutAnimation/Lreact-native/Libraries/PushNotificationIOS/PushNotificationIOSes/Linking/Linkingreact-native/Libraries/ReactNative/AppRegistryries/Lists/FlatLisreact-native/Libraries/ReactNative/I18nManageraries/Lists/Sectioreact-native/Libraries/ReactNative/RendererProxybraries/Lists/Virtreact-native/Libraries/ReactNative/RootTagct-native/Librariereact-native/Libraries/ReactNative/UIManagereact-native/Librarreact-native/Libraries/ReactNative/requireNativeComponentact-native/Librarireact-native/Libraries/Settings/Settingsrt * from 'react-nreact-native/Libraries/Share/ShareonsAndroid/Permissreact-native/Libraries/StyleSheet/PlatformColorValueTypesIOSs/PushNotificationreact-native/Libraries/StyleSheet/PlatformColorValueTypesnative/Libraries/Rreact-native/Libraries/StyleSheet/StyleSheetfrom 'react-nativereact-native/Libraries/StyleSheet/StyleSheetTypesport * from 'reactreact-native/Libraries/StyleSheet/processColorerProxy';
export *react-native/Libraries/Text/Textbraries/ReactNativreact-native/Libraries/TurboModule/RCTExportative/Libraries/ReactNative/UIManager';
ereact-native/Libraries/TurboModule/TurboModuleRegistrytive/requireNativereact-native/Libraries/Types/CoreEventTypesnative/Libraries/Sreact-native/Libraries/Utilities/Appearance'react-native/Librreact-native/Libraries/Utilities/BackHandler'react-native/Librreact-native/Libraries/Utilities/DevSettingseTypesIOS';
exportreact-native/Libraries/Utilities/DimensionstyleSheet/Platformreact-native/Libraries/Utilities/PixelRatioreact-native/Librareact-native/Libraries/Utilities/Platformport * from 'reactreact-native/Libraries/Vibration/VibrationleSheetTypes';
expreact-native/Libraries/YellowBox/YellowBoxDeprecatedeet/processColor';react-native/Libraries/vendor/core/ErrorUtilsies/Text/Text';
exreact-native/Libraries/vendor/emitter/EventEmitteroModule/RCTExport';react-native/types/public/DeprecatedPropertiesAliasrom 'react-native/react-native/types/public/InsetsModule/TurboModulereact-native/types/public/ReactNativeRendereract-native/Librarireact-native/types/public/ReactNativeTypes
export * from 'react-native/Librarreact-native/Libraries/vendor/core/ErrorUtils from 'react-native/Libraries/Utilities/BackHandler';
export * from 'react-native/Libraries/Utilities/DevSettings';
export * from 'react-native/Libraries/Utilities/Dimensions';
export * from 'react-native/Libraries/Utilities/PixelRatio';
export * from 'react-native/Libraries/Utilities/Platform';
export * from 'react-native/Libraries/Vibration/Vibration';
export * from 'react-native/Libraries/YellowBox/YellowBoxDeprecated';
export * from 'react-native/Libraries/vendor/core/ErrorUtils';
export * from 'react-native/Libraries/vendor/emitter/EventEmitter';

export * from 'react-native/types/public/DeprecatedPropertiesAlias';
export * from 'react-native/types/public/Insets';
export * from 'react-native/types/public/ReactNativeRenderer';
export * from 'react-native/types/public/ReactNativeTypes';

import type {ErrorUtils} from 'react-native/Libraries/vendor/core/ErrorUtils';

declare global {
  interface NodeRequire {
    (id: string): any;
  }

  var require: NodeRequire;

  /**
   * Console polyfill
   * @see https://reactnative.dev/docs/javascript-environment#polyfills
   */
  interface Console {
    error(message?: any, ...optionalParams: any[]): void;
    info(message?: any, ...optionalParams: any[]): void;
    log(message?: any, ...optionalParams: any[]): void;
    warn(message?: any, ...optionalParams: any[]): void;
    trace(message?: any, ...optionalParams: any[]): void;
    debug(message?: any, ...optionalParams: any[]): void;
    table(...data: any[]): void;
    groupCollapsed(label?: string): void;
    groupEnd(): void;
    group(label?: string): void;
    /**
     * @deprecated Use LogBox.ignoreLogs(patterns) instead
     */
    ignoredYellowBox: string[];
  }

  var console: Console;

  /**
   * This contains the non-native `XMLHttpRequest` object, which you can use if you want to route network requests
   * through DevTools (to trace them):
   *
   *   global.XMLHttpRequest = global.originalXMLHttpRequest;
   *
   * @see https://github.com/facebook/react-native/issues/934
   */
  const originalXMLHttpRequest: any;

  const __BUNDLE_START_TIME__: number;
  const ErrorUtils: ErrorUtils;

  /**
   * This variable is set to true when react-native is running in Dev mode
   * @example
   * if (__DEV__) console.log('Running in dev mode')
   */
  const __DEV__: boolean;

  const HermesInternal: null | {};
}
